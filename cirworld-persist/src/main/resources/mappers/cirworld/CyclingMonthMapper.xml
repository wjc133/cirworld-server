<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elite.cirworld.persist.mapper.CyclingMonthMapper">
    <resultMap id="BaseResultMap" type="com.elite.cirworld.persist.model.CyclingMonth">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="distance" property="distance" jdbcType="INTEGER"/>
        <result column="max_speed" property="maxSpeed" jdbcType="REAL"/>
        <result column="average_speed" property="averageSpeed" jdbcType="REAL"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="start_longitude" property="startLongitude" jdbcType="DOUBLE"/>
        <result column="end_longitude" property="endLongitude" jdbcType="DOUBLE"/>
        <result column="start_latitude" property="startLatitude" jdbcType="DOUBLE"/>
        <result column="end_latitude" property="endLatitude" jdbcType="DOUBLE"/>
        <result column="areas" property="areas" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, uid, distance, max_speed, average_speed, start_time, end_time, start_longitude,
        end_longitude, start_latitude, end_latitude, areas
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.elite.cirworld.persist.model.CyclingMonthExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from cycling_month
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            limit ${limit}
        </if>
        <if test="offset != null">
            offset ${offset}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from cycling_month
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from cycling_month
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.elite.cirworld.persist.model.CyclingMonthExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from cycling_month
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.elite.cirworld.persist.model.CyclingMonth" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into cycling_month (uid, distance, max_speed,
        average_speed, start_time, end_time,
        start_longitude, end_longitude, start_latitude,
        end_latitude, areas)
        values (#{uid,jdbcType=BIGINT}, #{distance,jdbcType=INTEGER}, #{maxSpeed,jdbcType=REAL},
        #{averageSpeed,jdbcType=REAL}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
        #{startLongitude,jdbcType=DOUBLE}, #{endLongitude,jdbcType=DOUBLE}, #{startLatitude,jdbcType=DOUBLE},
        #{endLatitude,jdbcType=DOUBLE}, #{areas,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.elite.cirworld.persist.model.CyclingMonth" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into cycling_month
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="distance != null">
                distance,
            </if>
            <if test="maxSpeed != null">
                max_speed,
            </if>
            <if test="averageSpeed != null">
                average_speed,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="startLongitude != null">
                start_longitude,
            </if>
            <if test="endLongitude != null">
                end_longitude,
            </if>
            <if test="startLatitude != null">
                start_latitude,
            </if>
            <if test="endLatitude != null">
                end_latitude,
            </if>
            <if test="areas != null">
                areas,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="distance != null">
                #{distance,jdbcType=INTEGER},
            </if>
            <if test="maxSpeed != null">
                #{maxSpeed,jdbcType=REAL},
            </if>
            <if test="averageSpeed != null">
                #{averageSpeed,jdbcType=REAL},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startLongitude != null">
                #{startLongitude,jdbcType=DOUBLE},
            </if>
            <if test="endLongitude != null">
                #{endLongitude,jdbcType=DOUBLE},
            </if>
            <if test="startLatitude != null">
                #{startLatitude,jdbcType=DOUBLE},
            </if>
            <if test="endLatitude != null">
                #{endLatitude,jdbcType=DOUBLE},
            </if>
            <if test="areas != null">
                #{areas,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.elite.cirworld.persist.model.CyclingMonthExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from cycling_month
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update cycling_month
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=BIGINT},
            </if>
            <if test="record.distance != null">
                distance = #{record.distance,jdbcType=INTEGER},
            </if>
            <if test="record.maxSpeed != null">
                max_speed = #{record.maxSpeed,jdbcType=REAL},
            </if>
            <if test="record.averageSpeed != null">
                average_speed = #{record.averageSpeed,jdbcType=REAL},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.startLongitude != null">
                start_longitude = #{record.startLongitude,jdbcType=DOUBLE},
            </if>
            <if test="record.endLongitude != null">
                end_longitude = #{record.endLongitude,jdbcType=DOUBLE},
            </if>
            <if test="record.startLatitude != null">
                start_latitude = #{record.startLatitude,jdbcType=DOUBLE},
            </if>
            <if test="record.endLatitude != null">
                end_latitude = #{record.endLatitude,jdbcType=DOUBLE},
            </if>
            <if test="record.areas != null">
                areas = #{record.areas,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update cycling_month
        set id = #{record.id,jdbcType=BIGINT},
        uid = #{record.uid,jdbcType=BIGINT},
        distance = #{record.distance,jdbcType=INTEGER},
        max_speed = #{record.maxSpeed,jdbcType=REAL},
        average_speed = #{record.averageSpeed,jdbcType=REAL},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        start_longitude = #{record.startLongitude,jdbcType=DOUBLE},
        end_longitude = #{record.endLongitude,jdbcType=DOUBLE},
        start_latitude = #{record.startLatitude,jdbcType=DOUBLE},
        end_latitude = #{record.endLatitude,jdbcType=DOUBLE},
        areas = #{record.areas,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.elite.cirworld.persist.model.CyclingMonth">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update cycling_month
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="distance != null">
                distance = #{distance,jdbcType=INTEGER},
            </if>
            <if test="maxSpeed != null">
                max_speed = #{maxSpeed,jdbcType=REAL},
            </if>
            <if test="averageSpeed != null">
                average_speed = #{averageSpeed,jdbcType=REAL},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startLongitude != null">
                start_longitude = #{startLongitude,jdbcType=DOUBLE},
            </if>
            <if test="endLongitude != null">
                end_longitude = #{endLongitude,jdbcType=DOUBLE},
            </if>
            <if test="startLatitude != null">
                start_latitude = #{startLatitude,jdbcType=DOUBLE},
            </if>
            <if test="endLatitude != null">
                end_latitude = #{endLatitude,jdbcType=DOUBLE},
            </if>
            <if test="areas != null">
                areas = #{areas,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.elite.cirworld.persist.model.CyclingMonth">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update cycling_month
        set uid = #{uid,jdbcType=BIGINT},
        distance = #{distance,jdbcType=INTEGER},
        max_speed = #{maxSpeed,jdbcType=REAL},
        average_speed = #{averageSpeed,jdbcType=REAL},
        start_time = #{startTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        start_longitude = #{startLongitude,jdbcType=DOUBLE},
        end_longitude = #{endLongitude,jdbcType=DOUBLE},
        start_latitude = #{startLatitude,jdbcType=DOUBLE},
        end_latitude = #{endLatitude,jdbcType=DOUBLE},
        areas = #{areas,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>